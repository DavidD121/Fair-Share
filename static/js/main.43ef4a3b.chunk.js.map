{"version":3,"sources":["Bar.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","avg","max","min","range","getMeterHeight","val","fill","useSpring","height","from","conditionalAdjust","barHeightPx","document","getElementById","classList","add","meterStyle","top","interpolate","className","style","div","id","p","toFixed","currentUser","roommateAmounts","expenses","shoppingLists","total","Object","values","reduce","accumulator","num","budget","Home","useState","bodge","setBodge","pieData","labels","keys","datasets","label","data","backgroundColor","hoverOffset","onClick","window","confirm","visibility","for","required","type","name","placeholder","step","input","$","serializeArray","console","log","isNaN","parseFloat","alert","reset","newAmounts","push","newBudget","form","Shopping","map","list","listIndex","item","itemIndex","splice","removeItem","length","addClicked","addItem","Payments","expense","index","removeExpense","App","to","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.43ef4a3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport './Bar.css';\r\n\r\nfunction Bar({ avg, max, min }) {\r\n\r\n  var range = max - min;\r\n\r\n  var barHeightPx = 400;\r\n\r\n  function getMeterHeight(val) {\r\n    return ((val - min) / range) * barHeightPx;\r\n  }\r\n\r\n  const fill = useSpring({ height: avg ? avg : min, from: { height: min } });\r\n\r\n  var conditionalAdjust = 0;\r\n\r\n  if ((avg ? getMeterHeight(avg) : 0) > (barHeightPx * 92 / 100)) {\r\n    var div = document.getElementById('meter');\r\n    div.classList.add('filled');\r\n    conditionalAdjust = -20;\r\n  }\r\n\r\n\r\n  const meterStyle = {\r\n    top: fill.height.interpolate(val => (getMeterHeight(val)) + conditionalAdjust),\r\n  }\r\n\r\n  return (\r\n    <div className='avgbar'>\r\n      <h2 className='label'>Budget: ${max}</h2>\r\n      <div className=\"bar\" style={{ height: barHeightPx }}>\r\n        <animated.div className=\"meter\" id=\"meter\" style={{ height: fill.height.interpolate(val => getMeterHeight(val)) }}>\r\n          <animated.p className=\"meter-label\" style={meterStyle}>{fill.height.interpolate(val => val.toFixed(2))}</animated.p>\r\n        </animated.div>\r\n      </div>\r\n      <h2 className='label'>{min}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bar;","import React, { useState } from 'react';\nimport './App.css';\nimport Bar from './Bar.js';\nimport $, { data } from 'jquery'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport {Pie} from 'react-chartjs-2';\n\n\nvar currentUser = \"Rob\";\n\nvar roommateAmounts = { \"David\": 100, \"Blake\": 100, \"Rob\": 100 };\n\nvar expenses = [\n    {\"description\":\"groceries\", \"cost\": 100, \"roommate\":\"David\"},  \n    {\"description\":\"groceries\", \"cost\": 100, \"roommate\":\"Blake\"},\n    {\"description\":\"groceries\", \"cost\": 100, \"roommate\":\"Rob\"},  \n];\n\nvar shoppingLists = [\n  {\"name\" : \"Groceries\", \"list\" : [\n    {\"item\": \"Eggs\", \"cost\" : \"\"},\n    {\"item\": \"Ham\", \"cost\" : \"\"},\n    {\"item\": \"Milk\", \"cost\" : \"\"},\n    {\"item\": \"Chicken\", \"cost\" : \"\"}\n  ]},\n  {\"name\" : \"Wishlist\", \"list\" : [\n    {\"item\": \"New Toaster\", \"cost\" : 50.00},\n    {\"item\": \"4k TV\", \"cost\" : 350.00}\n  ]}\n]\n\nvar total = Object.values(roommateAmounts).reduce((accumulator, num) => accumulator + num);\n\nvar budget = 1000;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Router>\n        <div className=\"nav\">\n            <Link className=\"nav-link\" to={'/Fair-Share/'}><div className=\"nav-text\">Home</div></Link>\n            <Link className=\"nav-link\" to={'/Fair-Share/shopping/'}><div className=\"nav-text\">Shopping</div></Link>\n            <Link className=\"nav-link\" to={'/Fair-Share/payments/'}><div className=\"nav-text\">Payments</div></Link>\n        </div>\n          <Switch>\n            <Route path='/Fair-Share/' exact component={Home} />\n            <Route path='/Fair-Share/payments' component={Payments} />\n            <Route path='/Fair-Share/shopping' component={Shopping} />\n          </Switch>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nfunction Home() {\n  \n  const [amounts, setAmounts] = useState({ \"David\": 100, \"Blake\": 100, \"Rob\": 100 });\n  const [bodge, setBodge] = useState(100);\n\n  total = Object.values(roommateAmounts).reduce((accumulator, num) => accumulator + num);\n  var pieData = {\n    labels: Object.keys(roommateAmounts),\n    datasets: [{\n        label: 'Spending',\n        data: Object.values(roommateAmounts),\n        backgroundColor: [\n            'rgb(255, 99, 132)',\n            'rgb(54, 162, 235)',\n            'rgb(255, 205, 86)'\n        ],\n        hoverOffset: 4\n    }]\n  }\n\n  \nconst barData = {\n  labels: [\"Money Spent\"],\n  datasets: [{\n    label: 'My First Dataset',\n    data: [65],\n    backgroundColor: ['rgba(75, 192, 192, 0.2)'],\n    borderColor: ['rgb(75, 192, 192)'],\n    borderWidth: 1\n  }]\n};\n\n  function addExpenseClicked() {\n    document.getElementById(\"expenseForm\").style.visibility=\"visible\";\n  }\n\n  function balanceClicked() {\n    var message = \"David owes Rob X\\nBlake owes Rob Y\\n*UNDER DEVELOPMENT*\\nPlease pay each other accordingly and press OK, if you cannot pay at the moment, press Cancel\";\n    if(window.confirm(message)) {\n      roommateAmounts[\"David\"] = total/3;\n      roommateAmounts[\"Blake\"] = total/3;\n      roommateAmounts[\"Rob\"] = total/3;\n\n      setBodge(bodge + 1);\n    }\n  }\n\n  function addExpense() {\n      var input = $('#expenseForm').serializeArray();\n      \n      console.log(input);\n\n      if(isNaN(parseFloat(input[1][\"value\"]))) {\n        alert(\"Please enter a valid number\");\n      } else {\n        document.getElementById('expenseForm').reset();\n      \n        var newAmounts = roommateAmounts;\n        newAmounts[currentUser] = roommateAmounts[currentUser] + parseFloat(input[1][\"value\"]);\n\n        expenses.push({\"description\":input[0][\"value\"], \"cost\": parseFloat(input[1][\"value\"]), \"roommate\":currentUser});\n\n        console.log(newAmounts);\n        roommateAmounts = newAmounts;\n        setBodge(bodge + 1);\n\n        document.getElementById(\"expenseForm\").style.visibility=\"hidden\";\n        console.log(\"in addexpense\");\n      }\n      \n  }\n\n  function setBudgetClicked() {\n    document.getElementById(\"budgetForm\").style.visibility=\"visible\";\n  }\n\n  function setBudget() {\n    var input = $('#budgetForm').serializeArray();\n      \n    console.log(input);\n\n    var newBudget = parseFloat(input[0][\"value\"]);\n\n    if(isNaN(newBudget)) {\n      alert(\"Please enter a valid number\");\n    } else {\n      var form = document.getElementById('budgetForm');\n      form.reset();\n    \n      budget = newBudget;\n\n      setBodge(bodge + 1);\n\n      form.style.visibility=\"hidden\";\n      console.log(\"in setBudget\");\n    }\n  }\n\n  return(\n    <div className=\"home\">\n    <div className=\"left-cols\">\n      <div className=\"spending col\">\n          <div className=\"chart-container\">\n              <Pie data={pieData}/>\n          </div>\n          <button className=\"balance-button\" onClick={balanceClicked}>Balance</button>\n          <div className=\"balance-tab\" id=\"balanceConfirmation\"></div>\n      </div>\n      <div className=\"add-expense col\">\n          <button className=\"add-expense-div\" onClick={addExpenseClicked}>Add Expense</button>\n          <form id=\"expenseForm\" className=\"hidden-form\">\n              <div className=\"add-expense-div\">\n                <label for=\"description\">Description: </label>\n                <input required type=\"text\" name=\"description\" id=\"description\"/>\n              </div>\n              \n              <div className=\"add-expense-div\">\n                <label for=\"cost\" style={{\"margin-left\": \"40px\"}}>Cost: $</label>\n                <input required type=\"number\" placeholder=\"1.00\" step=\"0.01\" name=\"cost\" id=\"cost\"/>\n              </div>\n              <button type=\"button\" className=\"add-expense-div\" onClick={addExpense}>Add</button>\n          </form>\n      </div>\n    </div>\n    <div className=\"budget col\">\n      <Bar avg={total} max={budget} min={0}/>\n      <button className=\"set-budget\" onClick={setBudgetClicked}>Set Budget</button>\n      <form id=\"budgetForm\" className=\"hidden-form\">\n        <div className=\"add-expense-div\">\n          <label for=\"description\">New Budget: </label>\n          $<input required type=\"text\" name=\"description\" id=\"description\"/>\n        </div>\n        <button type=\"button\" className=\"add-expense-div\" onClick={setBudget}>Confirm</button>\n      </form>\n    </div>\n    </div>\n\n  );\n}\n\nfunction Shopping() {\n\n  const [bodge, setBodge] = useState(0);\n\n  total = Object.values(roommateAmounts).reduce((accumulator, num) => accumulator + num);\n\n  console.log(shoppingLists);\n\n  function removeItem(listIndex, itemIndex) {\n    shoppingLists[listIndex].list.splice(itemIndex,1);\n\n    setBodge(bodge + 1);\n  }\n\n  function addClicked(listIndex) {\n    document.getElementById(\"form\" +listIndex).style.visibility=\"visible\";\n  }\n\n  function addItem(listIndex) {\n    var input = $(\"#form\" + listIndex).serializeArray();  \n    \n    console.log(input);\n\n    document.getElementById(\"form\" + listIndex).reset();\n  \n    shoppingLists[listIndex].list.push({\"item\" : input[0]['value'], \"cost\" : input[1]['value']});\n\n    setBodge(bodge + 1);\n    console.log(\"in addItem\");\n    \n    document.getElementById(\"form\" +listIndex).style.visibility=\"hidden\";\n\n  }\n\n  function addListClicked(listIndex) {\n    document.getElementById(\"addListForm\").style.visibility=\"visible\";\n  }\n\n  function addList() {\n    var input = $(\"#addListForm\").serializeArray();  \n    \n    console.log(input);\n    var form = document.getElementById(\"addListForm\");\n    if(form) {\n      form.reset();\n    \n      shoppingLists.push({\"name\" : input[0][\"value\"], \"list\" : []});\n\n      setBodge(bodge + 1);\n      console.log(\"in addItem\");\n      \n      form.style.visibility=\"hidden\";\n    }\n      \n  }\n\n  return( \n  <div className=\"shopping\">\n    <h1 className=\"shopping-title\">Shopping Lists</h1>\n    <h2>Budget Left: ${budget-total}</h2>\n    Press the checkbox to remove an item\n    <div className='shopping-lists'>\n      {shoppingLists.map((list,listIndex) => ( \n        <div className=\"shopping-list\">\n          <h3 className=\"list-name\">{list[\"name\"]}</h3>\n          <div className=\"list-items\">\n            {list[\"list\"].map((item,itemIndex) => (\n              <div className=\"list-item\">\n                <input type=\"checkbox\" className=\"remove-item-button\" onClick={() =>  removeItem(listIndex, itemIndex)}></input>\n                <text className=\"item-name\">{item['item']} {console.log(isNaN(item['cost']))}</text> \n                <text className=\"item-cost\">{(item['cost'].length == 0 || isNaN(item['cost'])) ? \"\" : (\"$\" + item['cost'])} {console.log(item['cost'])}</text> \n              </div>\n            ))}\n            <button className=\"add-item\" onClick={()=>addClicked(listIndex)}>+</button>\n            <form id={\"form\" + listIndex} className=\"hidden-form\">\n              <div>\n                <label for=\"description\">Item: </label>\n                <input required type=\"text\" name=\"description\" id=\"description\"/>\n              </div>\n              \n              <div>\n                <label for=\"cost\">Cost: $</label>\n                <input type=\"number\" step=\"0.01\" name=\"cost\" id=\"cost\"/>\n              </div>\n\n              <button className=\"add-expense-div\" onClick={() => addItem(listIndex)}>Add Item</button>\n            </form>\n          </div>\n        </div>\n      ))}\n      <div className=\"add-list\">\n        <button onClick={()=>addListClicked()}>Add List</button>\n        <form id=\"addListForm\" className=\"hidden-form\">\n          <div>\n            <label for=\"description\">Title: </label>\n            <input required type=\"text\" name=\"description\" id=\"description\"/>\n          </div>\n          <button className=\"add-expense-div\" onClick={addList}>Add</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nfunction Payments() {\n\nconst [bodge, setBodge] = useState(0);\n\nfunction removeExpense(index) {\n  console.log(expenses);\n  roommateAmounts[expenses[index]['roommate']] = roommateAmounts[expenses[index]['roommate']] - expenses[index]['cost']; \n  expenses.splice(index, 1);\n\n  setBodge(bodge + 1);\n}\n\n\nreturn( \n  <div className=\"payments\">\n    <h1 className=\"payments-title\">Expense List</h1>\n    <div className='payments-list'>\n      {expenses.map((expense,index) => (\n        <div className=\"payments-item\">\n          <div className=\"payment-attributes\">\n            <text className=\"payment-attribute\">Description: {expense['description']}</text> \n            <text className=\"payment-attribute\">Cost: {expense['cost']}</text> \n            <text className=\"payment-attribute\">Roommate: {expense['roommate']}</text> \n            <button className=\"remove-payment-button\" onClick={() =>  removeExpense(index)}>remove</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}